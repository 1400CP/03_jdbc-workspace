package com.kh.member.dao;

import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;

import com.kh.common.JDBCTemplate;
import com.kh.member.vo.Member;

public class MemberDao {
	
	private Properties prop = new Properties();
	
	public MemberDao() {
		String filePath = MemberDao.class.getResource("/db/sql/member-mapper.xml").getPath();
		// xml파일은 따로 지정해야 함.
		try {
			prop.loadFromXML(new FileInputStream(filePath)); // 이 파일을 읽지요? new 할때마다 새롭게 읽지요?
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public Member loginMember(Connection conn, String userId, String userPwd) {
		// select문 => ResultSet 객체(한행) => Member(객체), ArrayList 아니야
		Member m = null;
		
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		
		String sql = prop.getProperty("loginMember");
//		sql에는 key값이 loginMember인 것의 밸류를 주세요.
				
		try {
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, userId);
			pstmt.setString(2, userPwd);
			
			rset = pstmt.executeQuery();
			
			if(rset.next()) { // 조회된 결과가 있다면 => 한행
//				m = new Member(); // 모든 필드가 초기화됨.
				m = new Member(rset.getInt("user_no"),
								rset.getString("user_id"),
								rset.getString("user_pwd"),
								rset.getString("user_name"),
								rset.getString("phone"),
								rset.getString("email"),
								rset.getString("address"),
								rset.getString("interest"),
								rset.getDate("enroll_date"),
								rset.getDate("modify_date"),
								rset.getString("status")
								);
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			JDBCTemplate.close(rset);
			JDBCTemplate.close(pstmt);
		}
		
		return m; // null 이거나 뭐라도 있거나.
		
	}
	
	public void insertMember(Connection conn, Member m) {
		// insert문 => 처리된 행수 => 트랜잭션 (service에서 하지만, 일단 여기도)
		
		
	}

}
